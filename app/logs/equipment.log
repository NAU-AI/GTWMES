2025-03-06 00:36:22 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 00:36:22 - INFO - MESMain - Starting periodic message service...
2025-03-06 00:36:22 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 00:36:22 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 00:36:22 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 00:36:22 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 00:36:22 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 00:36:22 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 00:36:22 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 00:36:23 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 00:37:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:37:22 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 00:37:22 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 00:37:22 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 00:37:22 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 00:38:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:38:22 - ERROR - service.production_count_service - Error building production count message: 'list' object has no attribute 'code'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'
2025-03-06 00:38:22 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:39:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:39:22 - ERROR - service.production_count_service - Error building production count message: 'list' object has no attribute 'code'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'
2025-03-06 00:39:22 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:39:27 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.22s, Timeout = 185s
2025-03-06 00:39:27 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 00:39:27 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 00:39:27 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 00:40:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:40:22 - ERROR - service.production_count_service - Error building production count message: 'list' object has no attribute 'code'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'
2025-03-06 00:40:22 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:41:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:41:22 - ERROR - service.production_count_service - Error building production count message: 'list' object has no attribute 'code'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'
2025-03-06 00:41:22 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    return production_order.code if production_order else ""
           ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'code'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:42:22 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:42:22 - ERROR - service.production_count_service - Error building production count message: 'list' object has no attribute 'code'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    )
      
AttributeError: 'list' object has no attribute 'code'
2025-03-06 00:42:22 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 84, in _get_active_production_order_code
    )
      
AttributeError: 'list' object has no attribute 'code'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:43:06 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 00:43:06 - INFO - MESMain - Starting periodic message service...
2025-03-06 00:43:06 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 00:43:06 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 00:43:06 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 00:43:06 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 00:43:06 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 00:43:06 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 00:43:06 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 00:43:07 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 00:44:06 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:44:06 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:44:06 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:44:06 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:48:17 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 00:48:18 - INFO - MESMain - Starting periodic message service...
2025-03-06 00:48:18 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 00:48:18 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 00:48:18 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 00:48:18 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 00:48:18 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 00:48:18 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 00:48:18 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 00:48:19 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 00:49:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:49:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:49:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:49:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:50:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:50:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:50:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:50:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:51:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:51:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:51:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:51:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:51:23 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.21s, Timeout = 185s
2025-03-06 00:51:23 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 00:51:23 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 00:51:23 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 00:52:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:52:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:52:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:52:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:53:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:53:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:53:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:53:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:54:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:54:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:54:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:54:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 00:55:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 00:55:18 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 00:55:18 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 00:55:18 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:13:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:13:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:13:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:13:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:14:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:14:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:14:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:14:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:15:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:15:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:15:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:15:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:16:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:16:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:16:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:16:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:17:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:17:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:17:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:17:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:18:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:18:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:18:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:18:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:19:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:19:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:19:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:19:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:20:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:20:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:20:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:20:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:21:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:21:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:21:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:21:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:22:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:22:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:22:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:22:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:23:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:23:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:23:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:23:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:24:25 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:24:25 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:24:25 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:24:25 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 32, in get_production_order_by_equipment_id_and_status
    return self.production_order_dao.find_by_equipment_id(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 22, in find_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_orders = self.production_order_service.get_production_order_by_equipment_id_and_status(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 40, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:40:22 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:40:22 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:40:22 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:40:22 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:40:22 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:40:22 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:40:22 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:40:22 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:40:22 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:40:23 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:42:07 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:42:08 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:42:08 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:42:08 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:42:08 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:42:08 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:42:08 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:42:08 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:42:08 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:42:09 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:43:08 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:43:08 - ERROR - service.production_count_service - Error building production count message: 'ProductionOrderService' object has no attribute 'get_active_production_order'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderService' object has no attribute 'get_active_production_order'. Did you mean: 'get_active_production_order_code'?
2025-03-06 09:43:08 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderService' object has no attribute 'get_active_production_order'. Did you mean: 'get_active_production_order_code'?

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:43:36 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:43:36 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:43:36 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:43:36 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:43:36 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:43:36 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:43:36 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:43:36 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:43:36 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:43:37 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:50:17 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:50:17 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:50:17 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:50:17 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:50:17 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:50:17 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:50:17 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:50:17 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:50:17 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:50:18 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:52:07 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:52:07 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:52:07 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:52:07 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:52:07 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:52:07 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:52:07 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:52:07 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:52:07 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:52:08 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:53:07 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:53:07 - ERROR - service.production_order_service - Error fetching active production order for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>': 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'
2025-03-06 09:53:07 - ERROR - service.production_count_service - Error building production count message: Unable to fetch active production order.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 58, in get_active_production_order
    raise ServiceException("Unable to fetch active production order.") from e
exception.Exception.ServiceException: Unable to fetch active production order.
2025-03-06 09:53:07 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 58, in get_active_production_order
    raise ServiceException("Unable to fetch active production order.") from e
exception.Exception.ServiceException: Unable to fetch active production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:54:07 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:54:07 - ERROR - service.production_order_service - Error fetching active production order for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>': 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'
2025-03-06 09:54:07 - ERROR - service.production_count_service - Error building production count message: Unable to fetch active production order.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 58, in get_active_production_order
    raise ServiceException("Unable to fetch active production order.") from e
exception.Exception.ServiceException: Unable to fetch active production order.
2025-03-06 09:54:07 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 49, in get_active_production_order
    self.production_order_dao.find_active_production_order_by_equipment_id(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderDAO' object has no attribute 'find_active_production_order_by_equipment_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_active_production_order(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 58, in get_active_production_order
    raise ServiceException("Unable to fetch active production order.") from e
exception.Exception.ServiceException: Unable to fetch active production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:54:20 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:54:20 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:54:20 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:54:20 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:54:20 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:54:20 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:54:20 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:54:20 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:54:20 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:54:21 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:55:21 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:55:22 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:55:22 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:55:22 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:55:22 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:55:22 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:55:22 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:55:22 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:55:22 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:55:23 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:56:33 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:56:33 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:56:33 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:56:33 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:56:33 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:56:33 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:56:33 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:56:33 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:56:33 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:56:34 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:57:50 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 09:57:51 - INFO - MESMain - Starting periodic message service...
2025-03-06 09:57:51 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 09:57:51 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 09:57:51 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 09:57:51 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 09:57:51 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 09:57:51 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 09:57:51 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 09:57:52 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 09:58:51 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:58:51 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:58:51 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:58:51 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 09:59:51 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 09:59:51 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 09:59:51 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 09:59:51 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 10:00:51 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:00:51 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 10:00:51 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 10:00:51 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 10:00:56 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.23s, Timeout = 185s
2025-03-06 10:00:56 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 10:00:56 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 10:00:56 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 10:01:51 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:01:51 - ERROR - service.production_order_service - Error fetching production orders for equipment ID '<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>' with status 'False': SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.
2025-03-06 10:01:51 - ERROR - service.production_count_service - Error building production count message: Unable to fetch production orders.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.
2025-03-06 10:01:51 - ERROR - service.message_service - Error sending production message for equipment 1: Failed to build production count message.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <Equipment(id=1, code='MAQ01', ip='111.111.1.111')> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 35, in get_production_order_by_equipment_id_and_status
    self.production_order_dao.find_production_order_by_equipment_id(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\production_order_dao.py", line 38, in find_production_order_by_equipment_id
    ProductionOrder.equipment_id == equipment_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <Equipment(id=1, code='MAQ01', ip='111.111.1.111')>.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 50, in build_production_count
    production_order_code = self._get_active_production_order_code(equipment)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 81, in _get_active_production_order_code
    production_order = self.production_order_service.get_production_order_by_equipment_id_and_status(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 55, in get_production_order_by_equipment_id_and_status
    raise ServiceException("Unable to fetch production orders.") from e
exception.Exception.ServiceException: Unable to fetch production orders.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 57, in _send_production_message
    production_values = self.production_count_service.build_production_count(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_count_service.py", line 69, in build_production_count
    raise ServiceException("Failed to build production count message.") from e
exception.Exception.ServiceException: Failed to build production count message.
2025-03-06 10:02:11 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 10:02:11 - INFO - MESMain - Starting periodic message service...
2025-03-06 10:02:11 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 10:02:11 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 10:02:11 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 10:02:11 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 10:02:11 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 10:02:11 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 10:02:11 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 10:02:12 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 10:03:11 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:04:05 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:04:05 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:04:05 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:04:05 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:05:05 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:05:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:05:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:05:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:05:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:05:16 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.06s, Timeout = 185s
2025-03-06 10:05:16 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 10:05:16 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 10:05:16 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 10:06:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:06:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:06:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:06:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:06:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:07:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:07:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:07:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:07:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:07:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:08:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:08:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:08:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:08:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:08:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:08:54 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:08:54 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:08:54 - INFO - service.production_order_handler_service - Completing production order 'PO001' for equipment 'MAQ01'
2025-03-06 10:08:54 - ERROR - service.production_order_handler_service - Error processing production order conclusion: 'ProductionOrder' object is not iterable
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    (po for po in production_orders if po.code == production_order_code),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'ProductionOrder' object is not iterable
2025-03-06 10:08:54 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    (po for po in production_orders if po.code == production_order_code),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'ProductionOrder' object is not iterable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 109, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 10:08:54 - ERROR - MQTT.mqtt_message_processor - Error handling message: 'MessageService' object has no attribute 'send_message_response'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_processor.py", line 19, in on_message
    self.message_handler.handle_message(client, message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 23, in handle_message
    handler(client, message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in _handle_production_order_conclusion
    self._process_message(
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 43, in _process_message
    self._send_response(client, message, response_type)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 46, in _send_response
    self.message_service.send_message_response(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'MessageService' object has no attribute 'send_message_response'. Did you mean: '_send_message_response'?
2025-03-06 10:09:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:09:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:09:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:09:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:09:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:10:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:10:09 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:10:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:10:09 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:10:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:11:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:11:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:11:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:11:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:11:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:12:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:12:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:12:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:12:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:12:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:13:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:13:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:13:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:13:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:13:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:14:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:14:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:14:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:14:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:14:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:15:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:15:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:15:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:15:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:15:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:16:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:16:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:16:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:16:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:16:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:17:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:17:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:17:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:17:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:17:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:18:10 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:18:10 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:18:10 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:18:10 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:18:10 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:18:46 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 10:18:46 - INFO - MESMain - Starting periodic message service...
2025-03-06 10:18:46 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 10:18:46 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 10:18:46 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 10:18:46 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 10:18:46 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 10:18:46 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 10:18:46 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 10:18:47 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 10:19:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:19:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:19:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:19:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:19:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:19:57 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:19:57 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:19:57 - INFO - service.production_order_handler_service - Completing production order 'PO001' for equipment 'MAQ01'
2025-03-06 10:19:57 - INFO - service.production_order_service - Completed production order with ID 1
2025-03-06 10:19:57 - INFO - service.production_order_handler_service - Production order 'PO001' marked as completed for equipment 'MAQ01'
2025-03-06 10:19:57 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 10:19:57 - ERROR - MQTT.mqtt_message_processor - Error handling message: 'MessageService' object has no attribute 'send_message_response'
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_processor.py", line 19, in on_message
    self.message_handler.handle_message(client, message)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 23, in handle_message
    handler(client, message)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in _handle_production_order_conclusion
    self._process_message(
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 43, in _process_message
    self._send_response(client, message, response_type)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 46, in _send_response
    self.message_service.send_message_response(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'MessageService' object has no attribute 'send_message_response'. Did you mean: '_send_message_response'?
2025-03-06 10:20:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:20:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:20:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:20:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:20:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:20:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:20:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:21:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:21:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:21:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:21:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:21:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:21:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:21:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:21:51 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.25s, Timeout = 185s
2025-03-06 10:21:51 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 10:21:51 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 10:21:51 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 10:22:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:22:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:22:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:22:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:22:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:22:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:22:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:23:45 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 10:23:46 - INFO - MESMain - Starting periodic message service...
2025-03-06 10:23:46 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 10:23:46 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 10:23:46 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 10:23:46 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 10:23:46 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 10:23:46 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 10:23:46 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 10:23:47 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 10:23:52 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:23:52 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO001', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 10:23:52 - INFO - service.production_order_handler_service - Completing production order 'PO001' for equipment 'MAQ01'
2025-03-06 10:23:52 - ERROR - service.production_order_service - Error completing production order: Production order with ID '1' not found or already completed
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '1' not found or already completed
2025-03-06 10:23:52 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '1' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 10:23:52 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '1' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 10:23:52 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO001", "targetAmount": 0, "isEquipmentEnabled": false, "error": "Failed to complete production order"}
2025-03-06 10:24:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:24:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:24:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:24:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:24:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:24:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:24:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:25:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:25:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:25:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:25:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:25:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:25:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:25:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:26:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:26:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:26:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:26:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:26:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:26:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:26:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:26:51 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.25s, Timeout = 185s
2025-03-06 10:26:51 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 10:26:51 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 10:26:51 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 10:27:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:27:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:27:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:27:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:27:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:27:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:27:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:28:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:28:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:28:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:28:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:28:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:28:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:28:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:29:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:29:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:29:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:29:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:29:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:29:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:29:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:30:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:30:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:30:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:30:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:30:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:30:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:30:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:31:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:31:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:31:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:31:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:31:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:31:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:31:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:32:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:32:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:32:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:32:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:32:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:32:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:32:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:33:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:33:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:33:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:33:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:33:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:33:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:33:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:34:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:34:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:34:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:34:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:34:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:34:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:34:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:35:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:35:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:35:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:35:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:35:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:35:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:35:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:36:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:36:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:36:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:36:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:36:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:36:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:36:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:37:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:37:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:37:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:37:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:37:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:37:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:37:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:38:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:38:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:38:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:38:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:38:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:38:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:38:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:39:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:39:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:39:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:39:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:39:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:39:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:39:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:40:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:40:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:40:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:40:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:40:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:40:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:40:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:41:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:41:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:41:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:41:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:41:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:41:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:41:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:42:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:42:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:42:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:42:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:42:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:42:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:42:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:43:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:43:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:43:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:43:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:43:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:43:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:43:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:44:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:44:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:44:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:44:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:44:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:44:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:44:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:45:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:45:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:45:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:45:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:45:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:45:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:45:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:46:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:46:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:46:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:46:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:46:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:46:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:46:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:47:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:47:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:47:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:47:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:47:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:47:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:47:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:48:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:48:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:48:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:48:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:48:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:48:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:48:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:49:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:49:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:49:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:49:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:49:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:49:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:49:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:50:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:50:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:50:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:50:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:50:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:50:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:50:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:51:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:51:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:51:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:51:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:51:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:51:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:51:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:52:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:52:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:52:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:52:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:52:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:52:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:52:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:53:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:53:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:53:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:53:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:53:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:53:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:53:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:54:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:54:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:54:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:54:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:54:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:54:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:54:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:55:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:55:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:55:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:55:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:55:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:55:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:55:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:56:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:56:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:56:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:56:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:56:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:56:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:56:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:57:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:57:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:57:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:57:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:57:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:57:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:57:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:58:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:58:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:58:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:58:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:58:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:58:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:58:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 10:59:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 10:59:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 10:59:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 10:59:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 10:59:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 10:59:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 10:59:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:00:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:00:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:00:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:00:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:00:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:00:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:00:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:01:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:01:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:01:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:01:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:01:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:01:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:01:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:02:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:02:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:02:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:02:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:02:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:02:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:02:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:03:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:03:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:03:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:03:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:03:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:03:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:03:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:04:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:04:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:04:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:04:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:04:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:04:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:04:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:05:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:05:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:05:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:05:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:05:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:05:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:05:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:06:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:06:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:06:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:06:46 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:06:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:06:46 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:06:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:07:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:07:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:07:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:07:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:07:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:07:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:07:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:08:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:08:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:08:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:08:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:08:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:08:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:08:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:09:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:09:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:09:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:09:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:09:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:09:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:09:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:10:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:10:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:10:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:10:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:10:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:10:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:10:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:11:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:11:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:11:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:11:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:11:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:11:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:11:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:12:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:12:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:12:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:12:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:12:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:12:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:12:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:13:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:13:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:13:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:13:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:13:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:13:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:13:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:14:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:14:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:14:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:14:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:14:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:14:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:14:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:15:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:15:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:15:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:15:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:15:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:15:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:15:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:16:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:16:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:16:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:16:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:16:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:16:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:16:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:17:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:17:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:17:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:17:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:17:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:17:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:17:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:18:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:18:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:18:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:18:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:18:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:18:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:18:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:19:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:19:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:19:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:19:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:19:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:19:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:19:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:20:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:20:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:20:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:20:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:20:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:20:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:20:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:21:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:21:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:21:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:21:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:21:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:21:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:21:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:22:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:22:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:22:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:22:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:22:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:22:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:22:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:23:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:23:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:23:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:23:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:23:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:23:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:23:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:24:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:24:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:24:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:24:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:24:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:24:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:24:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:25:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:25:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:25:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:25:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:25:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:25:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:25:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:26:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:26:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:26:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:26:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:26:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:26:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:26:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:27:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:27:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:27:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:27:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:27:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:27:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:27:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:28:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:28:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:28:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:28:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:28:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:28:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:28:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:29:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:29:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:29:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:29:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:29:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:29:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:29:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:30:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:30:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:30:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:30:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:30:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:30:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:30:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:31:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:31:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:31:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:31:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:31:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:31:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:31:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:32:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:32:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:32:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:32:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:32:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:32:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:32:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:33:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:33:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:33:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:33:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:33:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:33:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:33:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:34:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:34:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:34:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:34:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:34:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:34:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:34:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:35:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:35:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:35:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:35:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:35:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:35:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:35:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:36:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:36:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 11:36:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 11:36:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:36:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:36:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 188 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:36:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:36:53 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrder', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 11:36:53 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrder' message: {'jsonType': 'ProductionOrder', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 11:36:53 - INFO - service.production_order_handler_service - Initializing new production order 'PO002' for equipment 'MAQ01'
2025-03-06 11:36:53 - INFO - service.production_order_service - Started new production order 'PO002' for equipment ID 1
2025-03-06 11:36:53 - INFO - service.production_order_handler_service - Started production order 'PO002' for equipment 'MAQ01'
2025-03-06 11:36:53 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrder'
2025-03-06 11:36:53 - INFO - service.message_service - Sent ProductionOrderResponse message to 'NAU/CRK/GTW003/BE' (Size: 137 bytes): {"jsonType": "ProductionOrder", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 11:37:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:37:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:37:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:37:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:37:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:38:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:38:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:38:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:38:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 193 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:38:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:39:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:39:47 - WARNING - service.counter_record_service - No counter records found for equipment output ID '1', returning 0.
2025-03-06 11:39:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:39:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 194 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 0}]}
2025-03-06 11:39:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:40:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:40:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:40:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:40:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:41:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:41:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:41:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:41:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:42:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:42:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:42:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:42:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:43:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:43:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:43:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:43:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:44:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:44:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:44:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:44:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:45:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:45:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:45:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:45:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:46:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:46:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:46:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:46:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:47:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:47:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:47:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:47:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:48:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:48:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:48:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:48:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:49:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:49:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:49:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:49:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:50:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:50:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:50:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:50:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:51:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:51:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:51:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:51:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:52:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:52:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:52:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:52:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:53:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:53:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:53:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:53:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:54:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:54:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:54:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:54:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:55:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:55:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:55:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:55:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:56:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:56:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:56:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:56:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:57:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:57:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:57:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:57:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:58:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:58:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:58:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:58:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 11:59:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 11:59:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 11:59:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 11:59:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:00:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:00:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:00:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:00:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:01:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:01:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:01:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:01:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:02:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:02:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:02:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:02:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:03:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:03:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:03:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:03:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:04:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:04:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:04:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:04:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:05:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:05:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:05:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:05:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:06:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:06:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:06:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:06:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:07:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:07:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:07:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:07:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:08:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:08:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:08:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:08:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:09:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:09:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:09:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:09:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:10:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:10:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:10:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:10:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:11:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:11:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:11:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:11:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:12:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:12:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:12:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:12:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:13:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:13:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:13:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:13:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:14:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:14:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:14:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:14:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:15:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:15:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:15:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:15:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:16:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:16:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:16:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:16:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:17:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:17:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:17:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:17:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:18:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:18:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:18:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:18:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:19:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:19:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:19:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:19:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:20:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:20:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:20:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:20:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:21:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:21:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:21:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:21:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:22:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:22:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:22:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:22:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:23:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:23:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:23:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:23:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:24:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:24:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:24:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:24:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:25:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:25:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:25:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:25:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:26:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:26:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:26:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:26:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:27:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:27:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:27:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:27:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:28:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:28:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:28:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:28:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:29:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:29:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:29:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:29:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:30:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:30:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:30:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:30:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:31:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:31:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:31:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:31:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:32:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:32:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:32:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:32:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:33:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:33:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:33:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:33:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:34:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:34:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:34:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:34:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:35:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:35:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:35:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:35:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:36:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:36:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:36:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:36:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:37:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:37:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:37:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:37:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:38:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:38:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:38:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:38:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:39:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:39:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:39:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:39:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:40:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:40:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:40:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:40:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:41:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:41:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:41:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:41:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:42:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:42:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:42:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:42:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:43:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:43:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:43:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:43:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:44:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:44:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:44:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:44:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:45:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:45:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:45:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:45:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:46:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:46:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:46:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:46:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:47:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:47:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:47:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:47:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:48:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:48:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:48:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:48:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:49:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:49:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:49:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:49:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:50:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:50:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:50:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:50:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 12:51:43 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 12:51:43 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 12:51:43 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 12:51:43 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 12:51:43 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 12:51:43 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 12:51:43 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 147 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 12:51:47 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 12:51:47 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 12:51:47 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 12:51:47 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 12:51:47 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 12:51:47 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 13:46:23 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 13:46:24 - INFO - MESMain - Starting periodic message service...
2025-03-06 13:46:24 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 13:46:24 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 13:46:24 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 13:46:24 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 13:46:24 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 13:46:24 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 13:46:24 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 13:46:25 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 13:47:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:47:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:47:24 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 13:47:24 - INFO - service.message_service - Sent production message for equipment 1 with type 'ProductionCount'.
2025-03-06 13:47:29 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:47:29 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:47:29 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:47:29 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:47:29 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 13:47:29 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 13:47:29 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 13:47:29 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 13:47:29 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 147 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 13:48:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:48:24 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 13:48:24 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 13:48:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:48:24 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 13:48:24 - INFO - service.message_service - Sent production message for equipment 1 with type 'ProductionCount'.
2025-03-06 13:49:24 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 13:49:24 - INFO - MESMain - Starting periodic message service...
2025-03-06 13:49:24 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 13:49:24 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 13:49:24 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 13:49:24 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 13:49:24 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 13:49:24 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 13:49:24 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 13:49:26 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 13:50:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:50:25 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:50:31 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 13:50:31 - INFO - service.message_service - Sent production message for equipment 1 with type 'ProductionCount'.
2025-03-06 13:50:34 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:50:34 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:50:34 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:50:34 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:50:34 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 13:50:34 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 13:50:34 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 13:50:34 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 13:51:08 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 147 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 13:52:54 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 13:52:55 - INFO - MESMain - Starting periodic message service...
2025-03-06 13:52:55 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 13:52:55 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 13:52:55 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 13:52:55 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 13:52:55 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 13:52:55 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 13:52:55 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 13:52:56 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 13:53:00 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:53:00 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:53:00 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 13:53:00 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 13:53:00 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 13:53:00 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 13:53:00 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 147 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 13:53:26 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 13:53:26 - INFO - MESMain - Starting periodic message service...
2025-03-06 13:53:26 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 13:53:26 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 13:53:26 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 13:53:26 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 13:53:26 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 13:53:26 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 13:53:26 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 13:53:27 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 13:53:33 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:53:33 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:53:33 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 13:53:33 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 13:53:33 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 13:53:33 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "C:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 13:53:33 - INFO - service.message_service - Sent ProductionOrderConclusionResponse message to 'NAU/CRK/GTW003/BE' (Size: 147 bytes): {"jsonType": "ProductionOrderConclusion", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 13:54:26 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 13:54:27 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 13:54:27 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 13:54:27 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 13:54:27 - INFO - service.message_service - Sent ProductionCount message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 13:54:27 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 13:57:48 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 13:57:48 - INFO - MESMain - Starting periodic message service...
2025-03-06 13:57:48 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 13:57:48 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 13:57:48 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 13:57:48 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 13:57:48 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 13:57:48 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 13:57:48 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 13:57:49 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 13:58:08 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:58:08 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 13:58:08 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 13:58:08 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 13:58:08 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 13:58:08 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 13:58:12 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:03:59 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:03:59 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:03:59 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:03:59 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:03:59 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:03:59 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:03:59 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:03:59 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:03:59 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:04:00 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:04:02 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:04:18 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:04:18 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:04:18 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 14:04:18 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 14:04:18 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 80, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 90, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:04:18 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:04:59 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:04:59 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:04:59 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:04:59 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:04:59 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:05:59 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:05:59 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:05:59 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:05:59 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:05:59 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:06:59 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:06:59 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:06:59 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:06:59 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:06:59 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:07:04 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.47s, Timeout = 185s
2025-03-06 14:07:04 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 14:07:04 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 14:07:04 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 14:07:59 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:07:59 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:07:59 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:07:59 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:07:59 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:08:59 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:08:59 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:08:59 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:08:59 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:08:59 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:09:48 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:09:48 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:09:48 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:09:48 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:09:48 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:09:48 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:09:48 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:09:48 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:09:48 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:09:49 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:09:56 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:09:56 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:09:56 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:10:15 - ERROR - service.production_order_handler_service - Error processing production order conclusion: 'ProductionOrderHandlerService' object has no attribute 'topic_send'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 83, in process_production_order_conclusion
    client, self.topic_send, equipment
            ^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderHandlerService' object has no attribute 'topic_send'
2025-03-06 14:10:15 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 83, in process_production_order_conclusion
    client, self.topic_send, equipment
            ^^^^^^^^^^^^^^^
AttributeError: 'ProductionOrderHandlerService' object has no attribute 'topic_send'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in <lambda>
    lambda msg: self.production_order_handler.process_production_order_conclusion(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 96, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:10:15 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:11:56 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:11:56 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:11:56 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:11:56 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:11:56 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:11:56 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:11:56 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:11:56 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:11:56 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:11:57 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:12:05 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:12:05 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:12:05 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:12:15 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:12:15 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:12:15 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:12:15 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:12:15 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:12:15 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 14:12:15 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 14:12:15 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in <lambda>
    lambda msg: self.production_order_handler.process_production_order_conclusion(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 94, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:12:15 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:12:56 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:12:56 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:12:56 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:12:56 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:12:56 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:13:56 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:13:56 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:13:56 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:13:56 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:13:56 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:14:56 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:14:56 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:14:56 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:14:56 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:14:56 - ERROR - service.message_service - Error sending production message for equipment 1: MessageService.send_message_response() takes 4 positional arguments but 5 were given
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\message_service.py", line 87, in send_production_message
    self.send_message_response(
TypeError: MessageService.send_message_response() takes 4 positional arguments but 5 were given
2025-03-06 14:15:02 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.99s, Timeout = 185s
2025-03-06 14:15:02 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 14:15:02 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 14:15:02 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 14:15:11 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:15:11 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:15:11 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:15:11 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:15:11 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:15:11 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:15:11 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:15:11 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:15:11 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:15:12 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:15:19 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:15:19 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:15:19 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:15:19 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:15:19 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:15:19 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:15:19 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:15:26 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 198 bytes): {"jsonType": "ProductionCountResponse", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:15:26 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:15:26 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 14:15:26 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 14:15:26 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in <lambda>
    lambda msg: self.production_order_handler.process_production_order_conclusion(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 94, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:16:02 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:16:03 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:16:03 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:16:03 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:16:03 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:16:03 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:16:03 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:16:03 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:16:03 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:16:04 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:16:12 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:16:13 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:16:13 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:16:13 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:16:13 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:16:13 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:16:13 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:16:13 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:16:13 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:16:14 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:16:17 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:16:17 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:16:17 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:16:20 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:16:20 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:16:20 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:16:20 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:16:23 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 198 bytes): {"jsonType": "ProductionCountResponse", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:16:23 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:16:25 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 14:16:38 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 14:16:38 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 67, in <lambda>
    lambda msg: self.production_order_handler.process_production_order_conclusion(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 94, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:16:41 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:17:13 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:17:13 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:17:13 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:17:13 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:22:24 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:22:24 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:22:24 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:22:24 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:22:24 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:22:24 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:22:24 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:22:24 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:22:24 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:22:25 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:22:36 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:22:36 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:22:36 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:22:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:22:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:22:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:22:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:22:43 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 14:22:43 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 14:22:43 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 14:22:43 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:23:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:23:24 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:23:24 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:23:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:23:24 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:23:24 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:23:33 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:23:33 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:23:33 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:23:33 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:23:33 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:23:33 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:23:33 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:23:33 - INFO - service.production_order_service - Completed production order with ID 2
2025-03-06 14:23:33 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 14:23:33 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 14:23:33 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:24:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:24:24 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:24:24 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:24:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:24:24 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:24:24 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:25:17 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:25:17 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:25:17 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:25:17 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:25:17 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:25:17 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:25:17 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:25:17 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:25:17 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:25:17 - ERROR - service.production_order_service - Error completing production order: Production order with ID '2' not found or already completed
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed
2025-03-06 14:25:17 - ERROR - service.production_order_handler_service - Error processing production order conclusion: Unable to complete production order.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.
2025-03-06 14:25:17 - ERROR - MQTT.mqtt_message_handler - Error processing 'ProductionOrderConclusion' for jsonType ProductionOrderConclusion: Failed to complete production order
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 102, in complete_production_order
    raise NotFoundException(
exception.Exception.NotFoundException: Production order with ID '2' not found or already completed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 84, in process_production_order_conclusion
    self.production_order_service.complete_production_order(production_order.id)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_service.py", line 110, in complete_production_order
    raise ServiceException("Unable to complete production order.") from e
exception.Exception.ServiceException: Unable to complete production order.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 31, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 78, in <lambda>
    lambda msg: self.production_order_handler.process_production_order_conclusion(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\production_order_handler_service.py", line 94, in process_production_order_conclusion
    raise ServiceException("Failed to complete production order") from e
exception.Exception.ServiceException: Failed to complete production order
2025-03-06 14:25:17 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:25:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:25:24 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:25:24 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:25:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:25:24 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:25:24 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:25:30 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.73s, Timeout = 185s
2025-03-06 14:25:30 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 14:25:30 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 14:25:30 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 14:26:24 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:26:24 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:26:24 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:26:24 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:26:24 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:26:24 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:26:42 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:26:42 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:26:42 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:26:42 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:26:42 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:26:42 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:26:42 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:26:42 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:26:42 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:26:43 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:26:46 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:26:46 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:26:46 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:26:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:26:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:26:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:26:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:26:46 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:26:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:26:46 - WARNING - service.production_order_service - Production order with ID '2' is already completed or does not exist.
2025-03-06 14:26:46 - INFO - service.production_order_handler_service - Production order 'PO002' marked as completed for equipment 'MAQ01'
2025-03-06 14:26:46 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 14:26:46 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:27:42 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:27:42 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:27:42 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:27:43 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:27:43 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:27:43 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:28:43 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:28:43 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:28:43 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:28:43 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:28:43 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:28:43 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:29:00 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:29:00 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:29:00 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:29:00 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:29:00 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:29:00 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:29:00 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:29:00 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:29:00 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:29:01 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:29:08 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:29:08 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO002', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:29:08 - INFO - service.production_order_handler_service - Completing production order 'PO002' for equipment 'MAQ01'
2025-03-06 14:29:08 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:29:08 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:29:08 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:29:08 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:29:08 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:29:08 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:29:08 - WARNING - service.production_order_service - Production order with ID '2' is already completed or does not exist.
2025-03-06 14:29:08 - WARNING - service.production_order_handler_service - Production order 'PO002' was already completed or does not exist for equipment 'MAQ01'.
2025-03-06 14:29:08 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 14:29:08 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO002", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:30:00 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:30:00 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:30:00 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:30:00 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:30:00 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:30:00 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:31:00 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:31:00 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:31:00 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:31:00 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:31:00 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:31:00 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:31:38 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 14:31:39 - INFO - MESMain - Starting periodic message service...
2025-03-06 14:31:39 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 14:31:39 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 14:31:39 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 14:31:39 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 14:31:39 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 14:31:39 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 14:31:39 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 14:31:40 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 14:31:59 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrder', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO003', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:31:59 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrder' message: {'jsonType': 'ProductionOrder', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO003', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:31:59 - INFO - service.production_order_handler_service - Initializing new production order 'PO003' for equipment 'MAQ01'
2025-03-06 14:31:59 - INFO - service.production_order_service - Started new production order 'PO003' for equipment ID 1
2025-03-06 14:31:59 - INFO - service.production_order_handler_service - Started production order 'PO003' for equipment 'MAQ01'
2025-03-06 14:31:59 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrder'
2025-03-06 14:31:59 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 145 bytes): {"jsonType": "ProductionOrderResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO003", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:32:21 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO003', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:32:21 - INFO - MQTT.mqtt_message_handler - Processing 'ProductionOrderConclusion' message: {'jsonType': 'ProductionOrderConclusion', 'equipmentCode': 'MAQ01', 'productionOrderCode': 'PO003', 'targetAmount': 0, 'isEquipmentEnabled': False}
2025-03-06 14:32:21 - INFO - service.production_order_handler_service - Completing production order 'PO003' for equipment 'MAQ01'
2025-03-06 14:32:21 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:32:22 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:32:22 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 195 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "PO003", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:32:22 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:32:22 - INFO - service.production_order_service - Completed production order with ID 3
2025-03-06 14:32:22 - INFO - service.production_order_handler_service - Production order 'PO003' was successfully marked as completed for equipment 'MAQ01'.
2025-03-06 14:32:22 - INFO - MQTT.mqtt_message_handler - Successfully handled 'ProductionOrderConclusion'
2025-03-06 14:32:22 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 155 bytes): {"jsonType": "ProductionOrderConclusionResponse", "equipmentCode": "MAQ01", "productionOrderCode": "PO003", "targetAmount": 0, "isEquipmentEnabled": false}
2025-03-06 14:32:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:32:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:32:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:32:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:32:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:32:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:33:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:33:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:33:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:33:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:33:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:33:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:34:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:34:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:34:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:34:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:34:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:34:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:34:44 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.24s, Timeout = 185s
2025-03-06 14:34:44 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 14:34:44 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 14:34:44 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 14:35:16 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 14:35:16 - ERROR - MQTT.mqtt_message_processor - Error handling message: 'EquipmentService' object has no attribute 'update_equipment_variables'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_processor.py", line 19, in on_message
    self.message_handler.handle_message(client, message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 23, in handle_message
    handler(client, message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 62, in _handle_configuration
    self.equipment_service.update_equipment_variables,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'EquipmentService' object has no attribute 'update_equipment_variables'
2025-03-06 14:35:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:35:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:35:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:35:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:35:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:35:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:36:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:36:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:36:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:36:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:36:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:36:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:37:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:37:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:37:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:37:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:37:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:37:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:38:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:38:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:38:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:38:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:38:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:38:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:39:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:39:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:39:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:39:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:39:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:39:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:40:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:40:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:40:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:40:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:40:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:40:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:41:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:41:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:41:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:41:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:41:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:41:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:42:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:42:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:42:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:42:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:42:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:42:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:43:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:43:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:43:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:43:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:43:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:43:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:44:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:44:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:44:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:44:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:44:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:44:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:45:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:45:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:45:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:45:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:45:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:45:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:46:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:46:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:46:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:46:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:46:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:46:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:47:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:47:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:47:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:47:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:47:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:47:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:48:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:48:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:48:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:48:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:48:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:48:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:49:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:49:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:49:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:49:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:49:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:49:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:50:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:50:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:50:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:50:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:50:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:50:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:51:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:51:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:51:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:51:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:51:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:51:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:52:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:52:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:52:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:52:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:52:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:52:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:53:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:53:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:53:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:53:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:53:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:53:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:54:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:54:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:54:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:54:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:54:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:54:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:55:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:55:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:55:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:55:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:55:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:55:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:56:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:56:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:56:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:56:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:56:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:56:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:57:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:57:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:57:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:57:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:57:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:57:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:58:39 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:58:39 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:58:39 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:58:39 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:58:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:58:39 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 14:59:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 14:59:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 14:59:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 14:59:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 14:59:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 14:59:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:00:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:00:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:00:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:00:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:00:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:00:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:01:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:01:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:01:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:01:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:01:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:01:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:02:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:02:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:02:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:02:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:02:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:02:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:03:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:03:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:03:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:03:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:03:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:03:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:04:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:04:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:04:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:04:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:04:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:04:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:05:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:05:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:05:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:05:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:05:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:05:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:06:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:06:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:06:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:06:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:06:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:06:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:07:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:07:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:07:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:07:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:07:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:07:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:08:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:08:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:08:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:08:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:08:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:08:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:09:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:09:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:09:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:09:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:09:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:09:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:10:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:10:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:10:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:10:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:10:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:10:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:11:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:11:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:11:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:11:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:11:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:11:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:12:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:12:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:12:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:12:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:12:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:12:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:13:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:13:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:13:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:13:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:13:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:13:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:14:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:14:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:14:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:14:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:14:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:14:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:15:40 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:15:40 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:15:40 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:15:40 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:15:40 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:15:40 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:20:04 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:20:04 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:20:04 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:20:04 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:20:04 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:20:04 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:20:04 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:20:04 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:20:04 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:20:05 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:20:09 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:20:09 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:20:09 - ERROR - MQTT.mqtt_message_handler - Error processing 'Configuration' for jsonType Configuration: ConfigurationHandlerService.process_equipment_configuration() missing 1 required positional argument: 'message'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 33, in _process_message
    handler(message)
TypeError: ConfigurationHandlerService.process_equipment_configuration() missing 1 required positional argument: 'message'
2025-03-06 15:20:09 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:21:04 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:21:04 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:21:04 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:21:04 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:21:04 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:21:04 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:22:09 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:22:09 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:22:09 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:22:09 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:22:09 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:22:09 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:22:09 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:22:09 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:22:09 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:22:10 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:22:14 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:22:14 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:22:18 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:22:19 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:22:23 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'targetAmount': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'isEquipmentEnabled': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'equipmentStatus': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'activeTime': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT01': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT02': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT03': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:23 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT04': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:22:26 - ERROR - MQTT.mqtt_message_handler - Error processing 'Configuration' for jsonType Configuration: MessageService.send_message_response() missing 1 required positional argument: 'data'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\configuration_handler_service.py", line 54, in process_equipment_configuration
    self._send_response(
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\configuration_handler_service.py", line 148, in _send_response
    self.message_service.send_message_response(client, response)
TypeError: MessageService.send_message_response() missing 1 required positional argument: 'data'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 33, in _process_message
    handler(message)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\MQTT\mqtt_message_handler.py", line 64, in <lambda>
    lambda msg: self.configuration_handler_service.process_equipment_configuration(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\configuration_handler_service.py", line 62, in process_equipment_configuration
    self._send_response(
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\configuration_handler_service.py", line 148, in _send_response
    self.message_service.send_message_response(client, response)
TypeError: MessageService.send_message_response() missing 1 required positional argument: 'data'
2025-03-06 15:22:26 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:23:09 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:23:09 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:23:09 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:23:09 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:23:09 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:23:09 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:24:46 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:24:46 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:24:46 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:24:46 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:24:46 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:24:46 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:24:46 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:24:46 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:24:46 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:24:47 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:24:52 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:24:52 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:24:57 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:24:58 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:25:00 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'targetAmount': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'isEquipmentEnabled': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'equipmentStatus': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'activeTime': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT01': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT02': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT03': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - ERROR - service.variable_service - Error creating or updating variable 'MAQ2-OUT04': 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\variable_service.py", line 91, in create_or_update_variable
    variable = self.variable_dao.find_by_equipment_id_and_key(equipment_id, key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'VariableDAO' object has no attribute 'find_by_equipment_id_and_key'. Did you mean: 'find_by_equipment_id'?
2025-03-06 15:25:18 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:25:18 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:29:45 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:29:46 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:29:46 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:29:46 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:29:46 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:29:46 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:29:46 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:29:46 - INFO - service.message_service - Scheduled production message for equipment 3 every 60 minutes.
2025-03-06 15:29:46 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:29:46 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:29:46 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:29:47 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:29:47 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:30:00 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:30:00 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:30:04 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:30:07 - INFO - service.variable_service - Creating new variable 'targetAmount' for equipment ID 4.
2025-03-06 15:30:07 - INFO - service.variable_service - Creating new variable 'isEquipmentEnabled' for equipment ID 4.
2025-03-06 15:30:07 - INFO - service.variable_service - Creating new variable 'equipmentStatus' for equipment ID 4.
2025-03-06 15:30:07 - INFO - service.variable_service - Creating new variable 'activeTime' for equipment ID 4.
2025-03-06 15:30:07 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT01' for equipment ID 4.
2025-03-06 15:30:08 - INFO - service.equipment_output_service - Creating new output 'MAQ2-OUT01' for equipment ID 4.
2025-03-06 15:30:08 - ERROR - service.equipment_output_service - Error creating or updating output 'MAQ2-OUT01': 'db_address' is an invalid keyword argument for EquipmentOutput
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 97, in create_or_update_output
    output = EquipmentOutput(
             ^^^^^^^^^^^^^^^^
  File "<string>", line 4, in __init__
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2175, in _declarative_constructor
    raise TypeError(
TypeError: 'db_address' is an invalid keyword argument for EquipmentOutput
2025-03-06 15:30:08 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT02' for equipment ID 4.
2025-03-06 15:30:08 - INFO - service.equipment_output_service - Creating new output 'MAQ2-OUT02' for equipment ID 4.
2025-03-06 15:30:08 - ERROR - service.equipment_output_service - Error creating or updating output 'MAQ2-OUT02': 'db_address' is an invalid keyword argument for EquipmentOutput
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 97, in create_or_update_output
    output = EquipmentOutput(
             ^^^^^^^^^^^^^^^^
  File "<string>", line 4, in __init__
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2175, in _declarative_constructor
    raise TypeError(
TypeError: 'db_address' is an invalid keyword argument for EquipmentOutput
2025-03-06 15:30:08 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT03' for equipment ID 4.
2025-03-06 15:30:08 - INFO - service.equipment_output_service - Creating new output 'MAQ2-OUT03' for equipment ID 4.
2025-03-06 15:30:08 - ERROR - service.equipment_output_service - Error creating or updating output 'MAQ2-OUT03': 'db_address' is an invalid keyword argument for EquipmentOutput
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 97, in create_or_update_output
    output = EquipmentOutput(
             ^^^^^^^^^^^^^^^^
  File "<string>", line 4, in __init__
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2175, in _declarative_constructor
    raise TypeError(
TypeError: 'db_address' is an invalid keyword argument for EquipmentOutput
2025-03-06 15:30:08 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT04' for equipment ID 4.
2025-03-06 15:30:08 - INFO - service.equipment_output_service - Creating new output 'MAQ2-OUT04' for equipment ID 4.
2025-03-06 15:30:08 - ERROR - service.equipment_output_service - Error creating or updating output 'MAQ2-OUT04': 'db_address' is an invalid keyword argument for EquipmentOutput
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 97, in create_or_update_output
    output = EquipmentOutput(
             ^^^^^^^^^^^^^^^^
  File "<string>", line 4, in __init__
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2175, in _declarative_constructor
    raise TypeError(
TypeError: 'db_address' is an invalid keyword argument for EquipmentOutput
2025-03-06 15:30:16 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:30:16 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:30:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:30:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:30:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:30:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:30:46 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:30:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:31:46 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:31:46 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:31:46 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:31:46 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:31:46 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:31:46 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:33:17 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:33:18 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:33:18 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:33:18 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:33:18 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:33:18 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:33:18 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:33:18 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:33:18 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:33:19 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:33:29 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:33:29 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:33:36 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:33:38 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:33:39 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:33:39 - INFO - service.variable_service - Creating new variable 'targetAmount' for equipment ID 5.
2025-03-06 15:33:39 - INFO - service.variable_service - Creating new variable 'isEquipmentEnabled' for equipment ID 5.
2025-03-06 15:33:39 - INFO - service.variable_service - Creating new variable 'equipmentStatus' for equipment ID 5.
2025-03-06 15:33:39 - INFO - service.variable_service - Creating new variable 'activeTime' for equipment ID 5.
2025-03-06 15:33:40 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT01' for equipment ID 5.
2025-03-06 15:33:40 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT02' for equipment ID 5.
2025-03-06 15:33:40 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT03' for equipment ID 5.
2025-03-06 15:33:40 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT04' for equipment ID 5.
2025-03-06 15:33:55 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:33:55 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:34:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:34:18 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:34:18 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:34:18 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:34:18 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:34:18 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:35:18 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:35:18 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:35:18 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:35:18 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:35:18 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:35:18 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:35:57 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:35:57 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:35:57 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:35:57 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:35:57 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:35:57 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:35:57 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:35:57 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:35:57 - INFO - service.message_service - Scheduled production message for equipment 5 every 60 minutes.
2025-03-06 15:35:57 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:35:57 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:35:58 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:35:58 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:36:02 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:36:02 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:36:05 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:36:08 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 5.
2025-03-06 15:36:08 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 5.
2025-03-06 15:36:08 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 5.
2025-03-06 15:36:08 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 5.
2025-03-06 15:36:09 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT01' for equipment ID 5.
2025-03-06 15:36:09 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT01' for equipment ID 5
2025-03-06 15:36:09 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT02' for equipment ID 5.
2025-03-06 15:36:09 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT02' for equipment ID 5
2025-03-06 15:36:09 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT03' for equipment ID 5.
2025-03-06 15:36:09 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT03' for equipment ID 5
2025-03-06 15:36:09 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT04' for equipment ID 5.
2025-03-06 15:36:09 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT04' for equipment ID 5
2025-03-06 15:36:12 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:36:12 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:36:57 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:36:57 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:36:57 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:36:57 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:36:57 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 190 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 60, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:36:57 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:38:39 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:38:39 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:38:39 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:38:39 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:38:39 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:38:39 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:38:39 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:38:39 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:38:39 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:38:40 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:38:43 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:38:43 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:38:49 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:38:50 - INFO - service.variable_service - Creating new variable 'targetAmount' for equipment ID 6.
2025-03-06 15:38:50 - INFO - service.variable_service - Creating new variable 'isEquipmentEnabled' for equipment ID 6.
2025-03-06 15:38:50 - INFO - service.variable_service - Creating new variable 'equipmentStatus' for equipment ID 6.
2025-03-06 15:38:50 - INFO - service.variable_service - Creating new variable 'activeTime' for equipment ID 6.
2025-03-06 15:38:54 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:38:54 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT01' for equipment ID 6.
2025-03-06 15:38:55 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT01' for equipment ID 6
2025-03-06 15:38:55 - ERROR - service.equipment_output_service - Error updating equipment output: SQL expression element or literal value expected, got <EquipmentOutput(id=6, code='MAQ2-OUT01', variable_id=23)>.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <EquipmentOutput(id=6, code='MAQ2-OUT01', variable_id=23)> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 66, in update_output
    existing_output = self.equipment_output_dao.find_by_id(output_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\equipment_output_dao.py", line 34, in find_by_id
    .filter(EquipmentOutput.id == output_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <EquipmentOutput(id=6, code='MAQ2-OUT01', variable_id=23)>.
2025-03-06 15:38:55 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT02' for equipment ID 6.
2025-03-06 15:38:55 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT02' for equipment ID 6
2025-03-06 15:38:55 - ERROR - service.equipment_output_service - Error updating equipment output: SQL expression element or literal value expected, got <EquipmentOutput(id=7, code='MAQ2-OUT02', variable_id=24)>.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <EquipmentOutput(id=7, code='MAQ2-OUT02', variable_id=24)> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 66, in update_output
    existing_output = self.equipment_output_dao.find_by_id(output_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\equipment_output_dao.py", line 34, in find_by_id
    .filter(EquipmentOutput.id == output_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <EquipmentOutput(id=7, code='MAQ2-OUT02', variable_id=24)>.
2025-03-06 15:38:55 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT03' for equipment ID 6.
2025-03-06 15:38:55 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT03' for equipment ID 6
2025-03-06 15:38:55 - ERROR - service.equipment_output_service - Error updating equipment output: SQL expression element or literal value expected, got <EquipmentOutput(id=8, code='MAQ2-OUT03', variable_id=25)>.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <EquipmentOutput(id=8, code='MAQ2-OUT03', variable_id=25)> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 66, in update_output
    existing_output = self.equipment_output_dao.find_by_id(output_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\equipment_output_dao.py", line 34, in find_by_id
    .filter(EquipmentOutput.id == output_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <EquipmentOutput(id=8, code='MAQ2-OUT03', variable_id=25)>.
2025-03-06 15:38:55 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT04' for equipment ID 6.
2025-03-06 15:38:55 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT04' for equipment ID 6
2025-03-06 15:38:55 - ERROR - service.equipment_output_service - Error updating equipment output: SQL expression element or literal value expected, got <EquipmentOutput(id=9, code='MAQ2-OUT04', variable_id=26)>.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 803, in _literal_coercion
    return expr._bind_param(operator, element, type_=bindparam_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 4606, in _bind_param
    return BindParameter(
           ^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 2036, in __init__
    self.type = _compared_to_type.coerce_compared_value(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 1044, in coerce_compared_value
    _coerced_type = _resolve_value_to_type(value)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\sqltypes.py", line 3816, in _resolve_value_to_type
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Object <EquipmentOutput(id=9, code='MAQ2-OUT04', variable_id=26)> is not legal as a SQL literal value

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\equipment_output_service.py", line 66, in update_output
    existing_output = self.equipment_output_dao.find_by_id(output_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\database\dao\equipment_output_dao.py", line 34, in find_by_id
    .filter(EquipmentOutput.id == output_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\attributes.py", line 453, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\orm\properties.py", line 477, in operate
    return op(self.__clause_element__(), *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\annotation.py", line 371, in __eq__
    return self.__element.__class__.__eq__(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 1516, in operate
    return op(self.comparator, *other, **kwargs)  # type: ignore[no-any-return]  # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\operators.py", line 584, in __eq__
    return self.operate(eq, other)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\type_api.py", line 197, in operate
    return op_fn(self.expr, op, *other, **addtl_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\default_comparator.py", line 121, in _boolean_compare
    obj = coercions.expect(
          ^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 395, in expect
    resolved = impl._literal_coercion(
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 805, in _literal_coercion
    self._raise_for_expected(element, err=err)
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 784, in _raise_for_expected
    return super()._raise_for_expected(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\.venv\Lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: SQL expression element or literal value expected, got <EquipmentOutput(id=9, code='MAQ2-OUT04', variable_id=26)>.
2025-03-06 15:40:52 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:40:52 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:40:52 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:40:52 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:40:52 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:40:52 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:40:52 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:40:52 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:40:52 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:40:53 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:40:57 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:40:57 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:40:57 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'targetAmount' for equipment ID 7.
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'isEquipmentEnabled' for equipment ID 7.
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'equipmentStatus' for equipment ID 7.
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'activeTime' for equipment ID 7.
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT01' for equipment ID 7.
2025-03-06 15:40:57 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT01' for equipment ID 7
2025-03-06 15:40:57 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT02' for equipment ID 7.
2025-03-06 15:40:58 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT02' for equipment ID 7
2025-03-06 15:40:58 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT03' for equipment ID 7.
2025-03-06 15:40:58 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT03' for equipment ID 7
2025-03-06 15:40:58 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT04' for equipment ID 7.
2025-03-06 15:40:58 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT04' for equipment ID 7
2025-03-06 15:40:58 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:40:58 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:40:58 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:40:59 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:43:35 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:43:35 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:43:35 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:43:35 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:43:35 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:43:35 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:43:35 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:43:35 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:43:35 - INFO - service.message_service - Scheduled production message for equipment 7 every 60 minutes.
2025-03-06 15:43:35 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:43:35 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:43:36 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:43:36 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:43:45 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:43:45 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:43:45 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT01' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT01' for equipment ID 7
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT01' with ID 14
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT02' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT02' for equipment ID 7
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT02' with ID 15
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT03' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT03' for equipment ID 7
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT03' with ID 16
2025-03-06 15:43:45 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT04' for equipment ID 7.
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT04' for equipment ID 7
2025-03-06 15:43:45 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT04' with ID 17
2025-03-06 15:43:45 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:43:45 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:46:31 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:46:31 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:46:31 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:46:31 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:46:31 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:46:31 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:46:31 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:46:31 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:46:31 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:46:32 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:46:38 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:46:38 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:46:38 - INFO - service.equipment_service - Creating new equipment 'MAQ2'.
2025-03-06 15:46:38 - INFO - service.variable_service - Creating new variable 'targetAmount' for equipment ID 8.
2025-03-06 15:46:38 - INFO - service.variable_service - Creating new variable 'isEquipmentEnabled' for equipment ID 8.
2025-03-06 15:46:38 - INFO - service.variable_service - Creating new variable 'equipmentStatus' for equipment ID 8.
2025-03-06 15:46:38 - INFO - service.variable_service - Creating new variable 'activeTime' for equipment ID 8.
2025-03-06 15:46:38 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:46:38 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:46:39 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:46:40 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:48:25 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:48:25 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:48:25 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:48:25 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:48:25 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:48:25 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:48:25 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:48:25 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:48:25 - INFO - service.message_service - Scheduled production message for equipment 8 every 60 minutes.
2025-03-06 15:48:25 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:48:25 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:48:26 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:48:26 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:48:39 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:48:39 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:48:39 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:48:39 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT01' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT01' for equipment ID 8
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT01' with ID 18
2025-03-06 15:48:39 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT02' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT02' for equipment ID 8
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT02' with ID 19
2025-03-06 15:48:39 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT03' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT03' for equipment ID 8
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT03' with ID 20
2025-03-06 15:48:39 - INFO - service.variable_service - Creating new variable 'MAQ2-OUT04' for equipment ID 8.
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Created new equipment output 'MAQ2-OUT04' for equipment ID 8
2025-03-06 15:48:39 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT04' with ID 21
2025-03-06 15:48:39 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:48:39 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:49:30 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:49:30 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:49:30 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:49:30 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:49:30 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:49:30 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:49:30 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:49:30 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:49:30 - INFO - service.message_service - Scheduled production message for equipment 8 every 60 minutes.
2025-03-06 15:49:30 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:49:30 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:49:31 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:49:31 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:49:33 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:49:33 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:49:33 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT01' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT01' with ID 18
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT02' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT02' with ID 19
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT03' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT03' with ID 20
2025-03-06 15:49:33 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT04' for equipment ID 8.
2025-03-06 15:49:33 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT04' with ID 21
2025-03-06 15:49:33 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:49:33 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:49:46 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:49:46 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:49:46 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT01' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT01' with ID 18
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT02' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT02' with ID 19
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT03' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT03' with ID 20
2025-03-06 15:49:46 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT04' for equipment ID 8.
2025-03-06 15:49:46 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT04' with ID 21
2025-03-06 15:50:00 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:50:00 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
2025-03-06 15:50:30 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:50:30 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:50:30 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:50:30 - ERROR - service.active_time_record_service - Error fetching latest active time record for equipment ID '1': No active time records found for equipment ID '1'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'
2025-03-06 15:50:30 - ERROR - service.active_time_record_service - Error fetching active time record for equipment ID '1': Unable to fetch latest active time record.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 87, in get_active_record_time
    return self.get_latest_by_equipment_id(equipment_id).active_time
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 83, in get_latest_by_equipment_id
    raise ServiceException("Unable to fetch latest active time record.") from e
exception.Exception.ServiceException: Unable to fetch latest active time record.
2025-03-06 15:50:30 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:50:30 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 189 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:50:30 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:51:30 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:51:30 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:51:30 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:51:30 - ERROR - service.active_time_record_service - Error fetching latest active time record for equipment ID '1': No active time records found for equipment ID '1'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'
2025-03-06 15:51:30 - ERROR - service.active_time_record_service - Error fetching active time record for equipment ID '1': Unable to fetch latest active time record.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 87, in get_active_record_time
    return self.get_latest_by_equipment_id(equipment_id).active_time
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 83, in get_latest_by_equipment_id
    raise ServiceException("Unable to fetch latest active time record.") from e
exception.Exception.ServiceException: Unable to fetch latest active time record.
2025-03-06 15:51:30 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:51:30 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 189 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:51:30 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:52:30 - INFO - service.production_count_service - Building production count message for equipment 'MAQ01'
2025-03-06 15:52:30 - WARNING - service.production_order_service - No active production order found for equipment ID 1
2025-03-06 15:52:30 - WARNING - service.production_count_service - No active production order found for equipment ID (<Equipment(id=1, code='MAQ01', ip='111.111.1.111')>, 1)
2025-03-06 15:52:30 - ERROR - service.active_time_record_service - Error fetching latest active time record for equipment ID '1': No active time records found for equipment ID '1'
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'
2025-03-06 15:52:30 - ERROR - service.active_time_record_service - Error fetching active time record for equipment ID '1': Unable to fetch latest active time record.
Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 74, in get_latest_by_equipment_id
    raise NotFoundException(
exception.Exception.NotFoundException: No active time records found for equipment ID '1'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 87, in get_active_record_time
    return self.get_latest_by_equipment_id(equipment_id).active_time
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Antonio Melo\Documents\MESCloud\GTW\GTWMES\app\service\active_time_record_service.py", line 83, in get_latest_by_equipment_id
    raise ServiceException("Unable to fetch latest active time record.") from e
exception.Exception.ServiceException: Unable to fetch latest active time record.
2025-03-06 15:52:30 - WARNING - service.production_count_service - Could not fetch equipment status for 'MAQ01', defaulting to 0
2025-03-06 15:52:30 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 189 bytes): {"jsonType": "ProductionCount", "equipmentCode": "MAQ01", "productionOrderCode": "", "equipmentStatus": 0, "activeTime": 0, "alarms": [], "counters": [{"outputCode": "OUT01", "value": 10}]}
2025-03-06 15:52:30 - INFO - service.message_service - Sent production message for equipment 1.
2025-03-06 15:52:36 - ERROR - MQTT.mqtt_heart_beat - ALARM TRIGGERED: Heartbeat timeout for MAQ01. Elapsed = 185.66s, Timeout = 185s
2025-03-06 15:52:36 - WARNING - service.plc_service - PLC client connection failed.
2025-03-06 15:52:36 - ERROR - service.plc_service - Failed to connect to PLC. Cannot write alarm data.
2025-03-06 15:52:36 - WARNING - MQTT.mqtt_heart_beat - Alarm written to PLC for MAQ01: Byte 8, Bit 0, Value 1
2025-03-06 15:53:04 - INFO - MESMain - Initializing MQTT connection...
2025-03-06 15:53:04 - INFO - MESMain - Starting periodic message service...
2025-03-06 15:53:04 - INFO - MQTT.mqtt_message_processor - Started periodic message sending thread.
2025-03-06 15:53:04 - INFO - MESMain - Starting heartbeat monitoring...
2025-03-06 15:53:04 - INFO - MQTT.mqtt_heart_beat - Starting heartbeat monitor thread.
2025-03-06 15:53:04 - INFO - MQTT.mqtt_heart_beat - Heartbeat monitoring started.
2025-03-06 15:53:04 - INFO - service.message_service - Scheduled production message for equipment 1 every 1 minutes.
2025-03-06 15:53:04 - INFO - MESMain - Starting MQTT client loop...
2025-03-06 15:53:04 - INFO - service.message_service - Scheduled production message for equipment 8 every 60 minutes.
2025-03-06 15:53:04 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ01.
2025-03-06 15:53:04 - INFO - MQTT.mqtt_heart_beat - Initialized heartbeat tracking for MAQ2.
2025-03-06 15:53:05 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ01. New cycle = 1 minute(s)
2025-03-06 15:53:05 - INFO - MQTT.mqtt_heart_beat - Configuration updated for MAQ2. New cycle = 60 minute(s)
2025-03-06 15:53:10 - INFO - MQTT.mqtt_message_processor - Received message on topic 'NAU/CRK/GTW003/PLC': {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:53:10 - INFO - MQTT.mqtt_message_handler - Processing 'Configuration' message: {'jsonType': 'Configuration', 'equipmentCode': 'MAQ2', 'ip': '192.168.1.10', 'pTimerCommunicationCycle': 60, 'variable': [{'key': 'targetAmount', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'WRITE'}, {'key': 'isEquipmentEnabled', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'BOOL', 'operationType': 'WRITE'}, {'key': 'equipmentStatus', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}, {'key': 'activeTime', 'dbAddress': 8, 'offsetByte': 4, 'offsetBit': 0, 'type': 'uint', 'operationType': 'READ'}], 'output': [{'code': 'MAQ2-OUT01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT02', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT03', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}, {'code': 'MAQ2-OUT04', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ', 'disable': False}], 'alarm': [{'key': 'alarm 01', 'dbAddress': 8, 'offsetByte': 2, 'offsetBit': 0, 'type': 'INT', 'operationType': 'READ'}]}
2025-03-06 15:53:10 - INFO - service.equipment_service - Updating existing equipment 'MAQ2'.
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'targetAmount' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'isEquipmentEnabled' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'equipmentStatus' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'activeTime' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT01' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT01' with ID 18
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT02' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT02' with ID 19
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT03' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT03' with ID 20
2025-03-06 15:53:10 - INFO - service.variable_service - Updating existing variable 'MAQ2-OUT04' for equipment ID 8.
2025-03-06 15:53:10 - INFO - service.equipment_output_service - Saved equipment output 'MAQ2-OUT04' with ID 21
2025-03-06 15:53:16 - INFO - service.variable_service - Creating new variable 'alarm 01' for equipment ID 8.
2025-03-06 15:53:17 - INFO - service.alarm_record_service - Creating new alarm for variable ID 43.
2025-03-06 15:53:19 - INFO - MQTT.mqtt_message_handler - Successfully handled 'Configuration'
2025-03-06 15:53:19 - INFO - service.message_service - Sent message to 'NAU/CRK/GTW003/BE' (Size: 1201 bytes): {"jsonType": "ConfigurationResponse", "equipmentCode": "MAQ2", "ip": "192.168.1.10", "pTimerCommunicationCycle": 60, "variable": [{"key": "targetAmount", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "WRITE"}, {"key": "isEquipmentEnabled", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "BOOL", "operationType": "WRITE"}, {"key": "equipmentStatus", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}, {"key": "activeTime", "dbAddress": 8, "offsetByte": 4, "offsetBit": 0, "type": "uint", "operationType": "READ"}], "output": [{"code": "MAQ2-OUT01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT02", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT03", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}, {"code": "MAQ2-OUT04", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ", "disable": false}], "alarm": [{"key": "alarm 01", "dbAddress": 8, "offsetByte": 2, "offsetBit": 0, "type": "INT", "operationType": "READ"}]}
